public class Ноутбук {
    private String модель;
    private int объемОЗУ;
    private int объемЖД;
    private String операционнаяСистема;
    private String цвет;

    // Конструктор класса Ноутбук
    public Ноутбук(String модель, int объемОЗУ, int объемЖД, String операционнаяСистема, String цвет) {
        this.модель = модель;
        this.объемОЗУ = объемОЗУ;
        this.объемЖД = объемЖД;
        this.операционнаяСистема = операционнаяСистема;
        this.цвет = цвет;
    }

    // Геттеры и сеттеры для полей класса Ноутбук
    public String getМодель() {
        return модель;
    }

    public void setМодель(String модель) {
        this.модель = модель;
    }

    public int getОбъемОЗУ() {
        return объемОЗУ;
    }

    public void setОбъемОЗУ(int объемОЗУ) {
        this.объемОЗУ = объемОЗУ;
    }

    public int getОбъемЖД() {
        return объемЖД;
    }

    public void setОбъемЖД(int объемЖД) {
        this.объемЖД = объемЖД;
    }

    public String getОперационнаяСистема() {
        return операционнаяСистема;
    }

    public void setОперационнаяСистема(String операционнаяСистема) {
        this.операционнаяСистема = операционнаяСистема;
    }

    public String getЦвет() {
        return цвет;
    }

    public void setЦвет(String цвет) {
        this.цвет = цвет;
    }
}
import java.util.*;

public class МагазинТехники {
    private Set<Ноутбук> ноутбуки;

    public МагазинТехники() {
        ноутбуки = new HashSet<>();
    }

    // Метод для добавления ноутбука в магазин
    public void добавитьНоутбук(Ноутбук ноутбук) {
        ноутбуки.add(ноутбук);
    }

    // Метод для фильтрации и вывода ноутбуков, удовлетворяющих заданным критериям
    public void фильтроватьНоутбуки(Map<Integer, Object> критерии) {
        List<Ноутбук> результат = new ArrayList<>();
        for (Ноутбук ноутбук : ноутбуки) {
            boolean соответствуетФильтру = true;
            for (Map.Entry<Integer, Object> entry : критерии.entrySet()) {
                int критерий = entry.getKey();
                Object значение = entry.getValue();

                switch (критерий) {
                    case 1: // ОЗУ
                        int минимальныйОбъемОЗУ = (int) значение;
                        if (ноутбук.getОбъемОЗУ() < минимальныйОбъемОЗУ) {
                            соответствуетФильтру = false;
                        }
                        break;
                    case 2: // Объем ЖД
                        int минимальныйОбъемЖД = (int) значение;
                        if (ноутбук.getОбъемЖД() < минимальныйОбъемЖД) {
                            соответствуетФильтру = false;
                        }
                        break;
                    case 3: // Операционная система
                        String операционнаяСистема = (String) значение;
                        if (!ноутбук.getОперационнаяСистема().equals(операционнаяСистема)) {
                            соответствуетФильтру = false;
                        }
                        break;
                    case 4: // Цвет
                        String цвет = (String) значение;
                        if (!ноутбук.getЦвет().equals(цвет)) {
                            соответствуетФильтру = false;
                        }
                        break;
                    // Добавьте другие критерии, если необходимо
                }

                if (!соответствуетФильтру) {
                    break;
                }
            }

            if (соответствуетФильтру) {
                результат.add(ноутбук);
            }
        }

        if (результат.isEmpty()) {
            System.out.println("Ноутбуки, удовлетворяющие заданным критериям, не найдены.");
        } else {
            System.out.println("Найденные ноутбуки:");
            for (Ноутбук ноутбук : результат) {
                System.out.println("Модель: " + ноутбук.getМодель());
                System.out.println("ОЗУ: " + ноутбук.getОбъемОЗУ() + " ГБ");
                System.out.println("Объём ЖД: " + ноутбук.getОбъемЖД() + " ГБ");
                System.out.println("Операционная система: " + ноутбук.getОперационнаяСистема());
                System.out.println("Цвет: " + ноутбук.getЦвет());
                System.out.println();
            }
        }
    }

    public static void main(String[] args) {
        МагазинТехники магазин = new МагазинТехники();

        // Создание и добавление ноутбуков в магазин
        Ноутбук ноутбук1 = new Ноутбук("Модель 1", 8, 500, "Windows 10", "Черный");
        Ноутбук ноутбук2 = new Ноутбук("Модель 2", 16, 1000, "macOS", "Серебристый");
        Ноутбук ноутбук3 = new Ноутбук("Модель 3", 4, 250, "Windows 10", "Белый");
        магазин.добавитьНоутбук(ноутбук1);
        магазин.добавитьНоутбук(ноутбук2);
        магазин.добавитьНоутбук(ноутбук3);

        // Запрос критериев фильтрации от пользователя и вывод результатов
        Scanner scanner = new Scanner(System.in);

        Map<Integer, Object> критерии = new HashMap<>();
        System.out.println("Введите цифру, соответствующую необходимому критерию:");
        System.out.println("1 - ОЗУ");
        System.out.println("2 - Объём ЖД");
        System.out.println("3 - Операционная система");
        System.out.println("4 - Цвет");
        int выбранныйКритерий = scanner.nextInt();

        switch (выбранныйКритерий) {
            case 1: // ОЗУ
                System.out.println("Введите минимальный объем ОЗУ (в ГБ):");
                int минимальныйОбъемОЗУ = scanner.nextInt();
                критерии.put(1, минимальныйОбъемОЗУ);
                break;
            case 2: // Объем ЖД
                System.out.println("Введите минимальный объем ЖД (в ГБ):");
                int минимальныйОбъемЖД = scanner.nextInt();
                критерии.put(2, минимальныйОбъемЖД);
                break;
            case 3: // Операционная система
                System.out.println("Введите требуемую операционную систему:");
                scanner.nextLine(); // Пропуск новой строки после ввода цифры
                String операционнаяСистема = scanner.nextLine();
                критерии.put(3, операционнаяСистема);
                break;
            case 4: // Цвет
                System.out.println("Введите требуемый цвет:");
                scanner.nextLine(); // Пропуск новой строки после ввода цифры
                String цвет = scanner.nextLine();
                критерии.put(4, цвет);
                break;
            // Добавьте другие критерии, если необходимо
        }

        магазин.фильтроватьНоутбуки(критерии);
    }
}
